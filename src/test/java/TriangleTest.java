// Generated by Selenium IDE
import static org.junit.Assert.*;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.Dimension;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.TestInstance;
import org.junit.jupiter.api.TestInstance.Lifecycle;
@TestInstance(Lifecycle.PER_CLASS)

public class TriangleTest {
	
	private WebDriver driver;
	  @BeforeAll
	  public void setUp() {
		  
		  System.setProperty("webdriver.chrome.driver", "C:\\chromedriver.exe");
		  ChromeOptions options = new ChromeOptions();
		  options.addArguments("--remote-allow-origins=*");
	      driver = new ChromeDriver(options);
	        }
	  
	  @AfterAll
	  public void tearDown() {
	    driver.quit();
	  }
	 
	  
	/* Равносторонний треугольник*/
	  @Test
	  public void Test1() {
		    driver.get("https://www.calculator.net/triangle-calculator.html");
		    driver.manage().window().setSize(new Dimension(1073, 1018));
		    driver.findElement(By.name("vz")).click();
		    driver.findElement(By.name("vz")).sendKeys("1");
		    driver.findElement(By.name("vc")).click();
		    driver.findElement(By.name("vc")).click();
		    driver.findElement(By.name("vc")).clear();
		    driver.findElement(By.cssSelector("tr:nth-child(5) input")).click();
	    assertEquals(driver.findElement(By.cssSelector("h3")).getText(), ("Equilateral Triangle"));
	  }
	 
	  /* Равнобедренный треугольник*/
	  @Test
	  public void Test2() {
		    driver.get("https://www.calculator.net/triangle-calculator.html");
		    driver.manage().window().setSize(new Dimension(1073, 1018));
		    driver.findElement(By.name("vc")).click();
		    driver.findElement(By.name("vc")).clear();
		    driver.findElement(By.name("vx")).click();
		    driver.findElement(By.name("vx")).clear();
		    driver.findElement(By.name("vx")).sendKeys("2");
		    driver.findElement(By.name("vy")).click();
		    driver.findElement(By.name("vy")).clear();
		    driver.findElement(By.name("vy")).sendKeys("2");
		    driver.findElement(By.name("vz")).click();
		    driver.findElement(By.name("vz")).sendKeys("3");
		    driver.findElement(By.cssSelector("tr:nth-child(5) input")).click();
	    assertEquals(driver.findElement(By.cssSelector("h3")).getText(), ("Obtuse Isosceles Triangle"));
	  }
	  
	  /* Не является треугольником */
	  @Test
	  public void Test3() {
	    driver.get("https://www.calculator.net/triangle-calculator.html");
	    driver.manage().window().setSize(new Dimension(1073, 1018));
	    driver.findElement(By.name("vc")).click();
	    driver.findElement(By.name("vc")).clear();
	    driver.findElement(By.name("vz")).click();
	    driver.findElement(By.name("vz")).sendKeys("2");
	    driver.findElement(By.cssSelector("tr:nth-child(5) input")).click();
	    assertEquals(driver.findElement(By.cssSelector("font")).getText(), ("The sum of two sides must be larger than the third."));
	  }
	  
	  /* Прямоугольный треугольник */
	  
	  @Test
	  public void Test4() {
		    driver.get("https://www.calculator.net/triangle-calculator.html");
		    driver.manage().window().setSize(new Dimension(1073, 1018));
		    driver.findElement(By.name("vc")).click();
		    driver.findElement(By.name("vc")).clear();
		    driver.findElement(By.name("vc")).sendKeys("90");
		    driver.findElement(By.cssSelector("tr:nth-child(5) input")).click();
		    assertEquals(driver.findElement(By.cssSelector("h3")).getText(), ("Right Isosceles Triangle"));
	  }	
	
	
}
